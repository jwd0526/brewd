name: Lint

on:
  push:
  pull_request:

jobs:
  golangci-lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'
          cache-dependency-path: './backend/go.sum'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: ./backend
          args: --timeout=5m --out-format=colored-line-number

  go-fmt:
    name: Auto-format Go Code
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'
          cache-dependency-path: './backend/go.sum'

      - name: Run gofmt
        working-directory: ./backend
        run: |
          gofmt -w .

      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatted code
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add backend/
          git commit -m "style: auto-format Go code with gofmt"
          git push

  eslint:
    name: Lint Frontend Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint on native workspace
        working-directory: ./frontend/native
        run: npm run lint

      - name: Run ESLint on web workspace
        working-directory: ./frontend/web
        run: npm run lint

  prettier:
    name: Auto-format Frontend Code
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Format with Prettier
        working-directory: ./frontend
        run: npx prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"

      - name: Check for changes
        id: verify-changed-files
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatted code
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add frontend/
          git commit -m "style: auto-format frontend code with Prettier"
          git push

  docker-lint:
    name: Lint Dockerfiles
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Lint Backend Dockerfile
        uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: backend/Dockerfile
          failure-threshold: warning

      - name: Lint Frontend Dockerfile
        uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: frontend/web/Dockerfile
          failure-threshold: warning
